Shader "Shader学习/LightingMode/customize_bump_ramp_rim_detail"
{
    Properties
    {
        _MainTex("基础纹理", 2D) = "white" {}
        _BumpMap("凹凸纹理", 2D) = "bump" {}
        _Ramp("渐变", 2D) = "gray" {}
        _Detail("细节纹理", 2D) = "black" {}
        _RimColor("边缘颜色", Color) = (0.3, 0.5, 0.3, 0.6)
        _RimPower("边缘颜色强度", Range(0.5, 8.0)) = 3
    }

    SubShader
    {
        Tags {"RenderType" = "Opaque"}

        LOD 200

        CGPROGRAM

        #program surf surface Cartoon

        sampler2D _MainTex;
        sampler2D _BumpMap;
        sampler2D _Ramp;
        sampler2D _Detail;
        float4 _RimColor;
        float _RimPower;

        half4 LightingCartoon(SurfaceOutput s, half3 lightDir, half atten)
        {
            half nh = max(dot(s.Normal, lightDir));
            half diff = nh * 0.5 + 0.5;
            half ramp = tex2D(_Ramp, float2(diff, diff)).rgb;
            half4 color;
            color.rgb = s.Albedo * _LightColor0.rgb * ramp * atten * 2;
            color.a = s.Alpha;
            return color;
        }

        Input IN
        {
            float2 uv_MainTex;
            float2 uv_BumpMap;
            float2 uv_Detail;
            float3 viewDir;
        }

        void surf(Input IN, inout SurfaceOutput o)
        {
            o.Albedo = tex2D(_MainTex, IN.uv_MainTex).rgb;
            o.Albedo *= tex2D(_Detail, IN.uv_Detail).rgb * 2;

            o.Normal = UnpackNormal(tex2D(_BumpMap, IN.uv_BumpMap));
            float rim = 1 - saturate(dot(normalize(IN.viewDir), o.Normal);
            o.Emisseion = _RimColor.rgb * pow(rim, _RimPower);
        }
        ENDCG
    }
    Fallback "Diffuse"
}