Shader "Unity/vertex_fragment_shaders/SkyReflectionPerPixel"
{
    SubShader
    {
        Pass
        {
            CGPROGRAM

            #pragma vertex vertex
            #pragma fragment frag
            #include "UnityCG.cginc"

            struct v2f
            {
                float3 worldPos : TEXCOORD0;
                half3 worldNormal : TEXCOORD1;
                float4 pos : SV_POSITION;
            };

            v2f vert(float4 vertex : POSITION, float3 normal : NORMAL)
            {
                v2f o;
                o.pos = UnityObjectToClipPos(vertex);
                o.worldPos = mul(_Object2World, vertex);
                o.worldNormal = UnityObjectToWorldNormal(normal);
                return o;
            }

            fixed4 frag(v2f i) : SV_Target
            {
                float3 worldViewDir = normalize(UnityWorldSpaceViewDir(i.worldPos));
                float3 worldRefl = reflect(-worldViewDir, i.worldNormal);

                float4 skyData = UNITY_SAMPLE_TEXCUBE(unity_SpecCube0, worldRefl);
                float3 skyColor = DecodeHDR(skyData, unity_SpecCube0_HDR);

                float4 c;
                c.rgb = skyColor;
                return c;
            }

            ENDCG
        }
    }
}