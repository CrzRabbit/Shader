Shader "Unity/vertex_fragment_shaders/Fog"
{
    SubShader
    {
        Pass
        {
            CGPROGRAM

            #pragma vertex vert
            #pragma fragment frag
            #include "UnityCG.cginc"

            struct vertexInput
            {
                float4 vertex : POSITION;
                float4 texcoord0 : TEXCOORD0;
            };

            struct fragmentInput
            {
                float4 vertex : SV_POSITION;
                float4 texcoord0 : TEXCOORD0;

                // used to pass fog amount around number should be a free texcoord
                UNITY_FOG_COORDS(1)
            };

            fragmentInput vert(vertexInput i)
            {
                fragmentInput o;
                o.vertex = UnityObjectToClipPos(i.vertex);
                o.texcoord0 = i.texcoord0;

                // compute fog amount from clip space position
                UNITY_TRANSFER_FOG(o, o.vertex);
                return o;
            }

            fixed4 frag(fragmentInput i) : SV_Target
            {
                float4 color = float4(i.texcoord0.xy, 0, 0);

                // apply fog (additive pass are automatically handled)
                UNITY_APPLY_FOG(i.fogCoord, color);
                return color;
            }

            ENDCG
        }
    }
}